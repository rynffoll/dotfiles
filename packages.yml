- hosts: all
  vars:
    laptop_packages:
      - acpi
      - powertop
      - tlp
    dev_packages:
      - bash-completion
      - sqlite # fix dnf completion, see https://trivialfis.github.io/linux/2017/07/28/Fix-Fedora-DNF-bash-completion.html
      - vim
      - tmux
      - htop
      - curl
      - httpie
      - nodejs
      - java-1.8.0-oracle
      - java-1.8.0-oracle-devel
      - java-1.8.0-oracle-src
      - java-1.8.0-openjdk
      - java-1.8.0-openjdk-devel
      - java-1.8.0-openjdk-src
      - java-9-openjdk
      - java-9-openjdk-devel
      - java-9-openjdk-src
      - java-9-openjdk-jmods
      - docker
      - VirtualBox
      - ansible-lint
      - nmon
      - code
      - fbless
    redundant_packages:
      - libreoffice-core
      - rhythmbox
      - gnome-weather
    npm_packages:
      - yarn
      - create-react-app
    sdkman_packages:
      - { candidate: gradle, version: "4.4" }
      - { candidate: groovy, version: "2.4.13" }
      - { candidate: leiningen, version: "2.7.1" }
      - { candidate: maven, version: "3.5.2" }
  tasks:
    - name: Remove redundant packages
      become: yes
      package: name="{{ item }}" state=absent
      with_items: "{{ redundant_packages }}"
      when: ansible_distribution == "Fedora"
      tags:
        - clean
        - packages

    - name: Install laptop packages
      become: yes
      package: name="{{ item }}" state=present
      with_items: "{{ laptop_packages }}"
      when: ansible_distribution == "Fedora"
      tags:
        - laptop
        - packages

    - name: Install dev packages
      become: yes
      package: name="{{ item }}" state=present
      with_items: "{{ dev_packages }}"
      when: ansible_distribution == "Fedora"
      tags:
        - packages
        - dev

    - name: Install npm packages
      become: yes
      npm: name="{{ item }}" state=present global=yes
      with_items: "{{ npm_packages }}"
      tags:
        - packages
        - npm
        - dev

    - name: Install sdkman packages
      include_role: name="sdkman"
      vars:
        sdkman_auto_answer: true
        sdkman_update: true
        sdkman_install_packages: "{{ sdkman_packages }}"
      tags:
        - packages
        - java
        - dev

    - name: Check existing JetBrains Toolbox
      stat: path="~/.local/share/applications/jetbrains-toolbox.desktop"
      register: jb_app
      tags:
        - dev
        - jb

    - name: Get link to latest version of JetBrains Toolbox
      uri:
        url: "https://data.services.jetbrains.com//products/releases?code=TBA&latest=true&type=release"
        return_content: yes
      register: jb_response
      when: jb_app.stat.exists == False
      tags:
        - dev
        - jb

    - name: Parse link and checksum for latest Jetbrains Toolbox from resposne
      set_fact:
        jb_toolbox_link: "{{ jb_response.json.TBA.0.downloads.linux.link }}"
        jb_toolbox_checksum_link: "{{ jb_response.json.TBA.0.downloads.linux.checksumLink }}"
      when: jb_app.stat.exists == False
      tags:
        - dev
        - jb

    - name: Create temp directory for installing JetBrains Toolbox
      tempfile: state=directory suffix="jetbrains-toolbox"
      register: jb_tmpdir
      when: jb_app.stat.exists == False
      tags:
        - dev
        - jb

    - name: Uncompress JetBrains Toolbox
      unarchive:
        src: "{{ jb_toolbox_link }}"
        dest: "{{ jb_tmpdir.path }}"
        remote_src: yes
      when: jb_app.stat.exists == False
      tags:
        - dev
        - jb

    - name: Install JetBrains Toolbox
      shell: "{{ jb_tmpdir.path }}/jetbrains-toolbox-*/jetbrains-toolbox &"
      when: jb_app.stat.exists == False
      tags:
        - dev
        - jb

    - name: Check installed VirtualBox Extension Packs
      shell: "vboxmanage list extpacks | grep Extension\\ Packs: | sed 's/Extension\\ Packs:\\ //'"
      register: vbox_extpack_exists
      tags:
        - vbox

    - name: Get VirtualBox version
      shell: vboxmanage --version | tail -1 | sed 's/r.*//'
      register: vbox_version
      tags:
        - vbox

    - name: Create temp directory for installing JetBrains Toolbox
      tempfile: state=directory suffix="vbox-extpack"
      register: vbox_extpack_tmpdir
      when: vbox_extpack_exists.stdout == "0"
      tags:
        - vbox

    - name: Download VirtualBox Extension Pack
      get_url:
        url: "http://download.virtualbox.org/virtualbox/{{ vbox_version.stdout }}/Oracle_VM_VirtualBox_Extension_Pack-{{ vbox_version.stdout }}.vbox-extpack"
        dest: "{{ vbox_extpack_tmpdir.path }}"
      when: vbox_extpack_exists.stdout == "0"
      tags:
        - vbox

    - name: Install VirtualBox Extension Pack
      shell: "virtualbox {{ vbox_extpack_tmpdir.path }}/Oracle_VM_VirtualBox_Extension_Pack-{{ vbox_version.stdout }}.vbox-extpack &"
      when: vbox_extpack_exists.stdout == "0"
      tags:
        - vbox

