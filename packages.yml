- hosts: all
  vars:
    laptop_packages:
      - acpi
      - powertop
      - tlp
    dev_packages:
      - bash-completion
      - vim
      - tmux
      - htop
      - curl
      - httpie
      - nodejs
      - java-1.8.0-oracle
      - java-1.8.0-oracle-devel
      - java-1.8.0-openjdk
      - java-1.8.0-openjdk-devel
      - docker
      - VirtualBox
      - ansible-lint
    npm_packages:
      - yarn
      - create-react-app
    sdkman_packages:
      - { candidate: gradle, version: "4.1" }
      - { candidate: groovy, version: "2.4.12" }
      - { candidate: leiningen, version: "2.7.1" }
      - { candidate: maven, version: "3.5.0" }
    jb_toolbox:
      name: jetbrains-toolbox
      version: "1.4.2492"
  tasks:
    - name: Update all packages
      become: yes
      package: name="*" state=latest
      tags:
        - packages

    - name: Install laptop packages
      become: yes
      package: name="{{ item }}" state=present
      with_items: "{{ laptop_packages }}"
      when: ansible_distribution == "Fedora"
      tags:
        - packages

    - name: Install dev packages
      become: yes
      package: name="{{ item }}" state=present
      with_items: "{{ dev_packages }}"
      when: ansible_distribution == "Fedora"
      tags:
        - packages
        - dev

    - name: Install npm packages
      become: yes
      npm: name="{{ item }}" state=present global=yes
      with_items: "{{ npm_packages }}"
      tags:
        - packages
        - npm
        - dev

    - name: Install sdkman packages
      include_role: name="Comcast.sdkman"
      vars:
        sdkman_auto_answer: true
        sdkman_update: true
        sdkman_install_packages: "{{ sdkman_packages }}"
      tags:
        - packages
        - java
        - dev

    - name: Check existing JetBrains Toolbox
      stat: path="~/.local/share/applications/{{ jb_toolbox.name }}.desktop"
      register: jb_app
      tags:
        - dev
        - jb

    - name: Create temp directory for installing JetBrains Toolbox
      tempfile: state=directory suffix="{{ jb_toolbox.name }}"
      register: jb_tmpdir
      when: jb_app.stat.exists == False
      tags:
        - dev
        - jb

    - name: Download JetBrains Toolbox
      get_url:
        url: "https://download.jetbrains.com/toolbox/{{ jb_toolbox.name }}-{{ jb_toolbox.version }}.tar.gz"
        dest: "{{ jb_tmpdir.path }}"
      when: jb_app.stat.exists == False
      tags:
        - dev
        - jb

    - name: Uncompress JetBrains Toolbox
      unarchive:
        src: "{{ jb_tmpdir.path }}/{{ jb_toolbox.name }}-{{ jb_toolbox.version }}.tar.gz"
        dest: "{{ jb_tmpdir.path }}"
      when: jb_app.stat.exists == False
      tags:
        - dev
        - jb

    - name: Install JetBrains Toolbox
      shell: "{{ jb_tmpdir.path }}/{{ jb_toolbox.name }}-{{ jb_toolbox.version }}/jetbrains-toolbox &"
      when: jb_app.stat.exists == False
      tags:
        - dev
        - jb
