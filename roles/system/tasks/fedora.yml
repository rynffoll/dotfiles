---
- name: Import vars
  include_vars: fedora.yml

- name: Packages
  block:
    - name: Get release version
      command: rpm -E %fedora
      register: fedora_version

    - name: Install base repos
      become: yes
      package: name="{{ item.url }}" state=present disable_gpg_check=yes
      with_items: "{{ repos }}"

    # https://fedoraproject.org/wiki/Workstation/Third_Party_Software_Repositories
    - name: Install fedora-workstation-repositories
      become: yes
      package: name=fedora-workstation-repositories state=present

    - name: Enable google-chrome repo
      become: yes
      command: dnf config-manager --set-enabled google-chrome

    - name: Install packages
      become: yes
      package: name="{{ item }}" state=present
      with_items: "{{ packages }}"

- name: Gnome
  block:
    - name: Configure input sources
      dconf:
        key: "/org/gnome/desktop/input-sources/sources"
        value: "[('xkb', 'us'), ('xkb', 'ru')]"
        state: present

    - name: Configure keyboard
      dconf: key="{{ item.key }}" value="{{ item.value }}" state=present
      with_items: "{{ gnome.kbd_options }}"

    - name: Configure terminal
      dconf: key="{{ item.key }}" value="{{ item.value }}" state=present
      with_items: "{{ gnome.term_options }}"

    - name: Configure UI
      dconf: key="{{ item.key }}" value="{{ item.value }}" state=present
      with_items: "{{ gnome.ui_options }}"

    # - name: Configure favorite apps
    #   dconf: key="/org/gnome/shell/favorite-apps" value="{{ gnome.favorite_apps }}" state=present

    # - name: Configure extentions
    #   dconf: key="{{ item.key }}" value="{{ item.value }}" state=present
    #   with_items: "{{ gnome.exts_options }}"

    # - name: Load extentions configuration
    #   command: dconf load /org/gnome/shell/extensions/ < "{{ role_path }}/files/extensions.dconf"

# - name: JetBrains Toolbox
#   block:
#     - name: Check existing JetBrains Toolbox
#       stat: path="~/.local/share/applications/jetbrains-toolbox.desktop"
#       register: jb_app

#     - name: Get link to latest version of JetBrains Toolbox
#       uri:
#         url: "https://data.services.jetbrains.com//products/releases?code=TBA&latest=true&type=release"
#         return_content: yes
#       register: jb_response
#       when: jb_app.stat.exists

#     - name: Parse link and checksum for latest Jetbrains Toolbox from resposne
#       set_fact:
#         jb_toolbox_link: "{{ jb_response.json.TBA.0.downloads.linux.link }}"
#         jb_toolbox_checksum_link: "{{ jb_response.json.TBA.0.downloads.linux.checksumLink }}"
#       when: jb_app.stat.exists

#     - name: Create temp directory for installing JetBrains Toolbox
#       tempfile: state=directory suffix="jetbrains-toolbox"
#       register: jb_tmpdir
#       when: jb_app.stat.exists

#     - name: Uncompress JetBrains Toolbox
#       unarchive:
#         src: "{{ jb_toolbox_link }}"
#         dest: "{{ jb_tmpdir.path }}"
#       remote_src: yes
#       when: jb_app.stat.exists

#     - name: Install JetBrains Toolbox
#       shell: "{{ jb_tmpdir.path }}/jetbrains-toolbox-*/jetbrains-toolbox &"
#       when: jb_app.stat.exists

# - name: VirtualBox
#   block:
#     - name: Check installed VirtualBox Extension Packs
#       shell: "vboxmanage list extpacks | grep Extension\\ Packs: | sed 's/Extension\\ Packs:\\ //'"
#       register: vbox_extpack_exists

#     - name: Get VirtualBox version
#       shell: vboxmanage --version | tail -1 | sed 's/r.*//'
#       register: vbox_version

#     - name: Create temp directory for installing JetBrains Toolbox
#       tempfile: state=directory suffix="vbox-extpack"
#       register: vbox_extpack_tmpdir
#       when: vbox_extpack_exists.stdout == "0"

#     - name: Download VirtualBox Extension Pack
#       get_url:
#         url: "http://download.virtualbox.org/virtualbox/{{ vbox_version.stdout }}/Oracle_VM_VirtualBox_Extension_Pack-{{ vbox_version.stdout }}.vbox-extpack"
#       dest: "{{ vbox_extpack_tmpdir.path }}"
#       when: vbox_extpack_exists.stdout == "0"

#     - name: Install VirtualBox Extension Pack
#       shell: "virtualbox {{ vbox_extpack_tmpdir.path }}/Oracle_VM_VirtualBox_Extension_Pack-{{ vbox_version.stdout }}.vbox-extpack &"
#       when: vbox_extpack_exists.stdout == "0"
